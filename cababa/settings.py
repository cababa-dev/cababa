"""
Django settings for cababa project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
# reading .env file
environ.Env.read_env('.env')

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SECRET_KEY = env('SECRET_KEY')
DEBUG = env('DEBUG')
HOST_NAME = env('HOST_NAME')
ALLOWED_HOSTS = [HOST_NAME, 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'django_extensions',
    'rest_framework',
    'rest_framework.authtoken',
    'storages',
    'markdownify',

    'cababa',
    'guest',
    'hostess',
    'reservations',
    'staff',
    'users',
    'pre_register',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cababa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'cababa/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'cababa': 'cababa.templatetags.cababa_extras'
            }
        },
    },
]

WSGI_APPLICATION = 'cababa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': env.db()
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'users.User'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGIN_URL = '/'

# rest framework

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework.renderers.AdminRenderer',
    ),
}


AUTHENTICATION_BACKENDS = (
    'lib.auth.LineAuthBackend',
    'django.contrib.auth.backends.ModelBackend',
)

# LINEログイン
HOSTESS_LINE_CLIENT_ID = env('HOSTESS_LINE_CLIENT_ID')
HOSTESS_LINE_CLIENT_SECRET = env('HOSTESS_LINE_CLIENT_SECRET')
GUEST_LINE_CLIENT_ID = env('GUEST_LINE_CLIENT_ID')
GUEST_LINE_CLIENT_SECRET = env('GUEST_LINE_CLIENT_SECRET')

# LINE Messaging API
HOSTESS_LINE_CHANNEL_ID = env('HOSTESS_LINE_CHANNEL_ID')
HOSTESS_LINE_CHANNEL_SECRET = env('HOSTESS_LINE_CHANNEL_SECRET')
HOSTESS_LINE_ACCESS_TOKEN = env('HOSTESS_LINE_ACCESS_TOKEN')
GUEST_LINE_CHANNEL_ID = env('GUEST_LINE_CHANNEL_ID')
GUEST_LINE_CHANNEL_SECRET = env('GUEST_LINE_CHANNEL_SECRET')
GUEST_LINE_ACCESS_TOKEN = env('GUEST_LINE_ACCESS_TOKEN')

# LINE PAY
LINE_PAY_URL = env('LINE_PAY_URL')
LINE_PAY_CHANNEL_ID = env('LINE_PAY_CHANNEL_ID')
LINE_PAY_CHANNEL_SECRET = env('LINE_PAY_CHANNEL_SECRET')

# ZOOM
ZOOM_API_KEY = env('ZOOM_API_KEY')
ZOOM_API_SECRET = env('ZOOM_API_SECRET')
ZOOM_IMCHAT_HISTORY_TOKEN = env('ZOOM_IMCHAT_HISTORY_TOKEN')

SUPERUSER_EMAIL = env('SUPERUSER_EMAIL')
SUPERUSER_PASSWORD = env('SUPERUSER_PASSWORD')


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ja-jp'
TIME_ZONE = 'Asia/Tokyo'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

AWS_STORAGE_BUCKET_NAME = 'cababa-' + env('STAGE')

if env('STAGE') == 'local':
    STATIC_URL = '/static/'
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
else:
    STATIC_URL = '/static/'
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    MEDIA_URL = '/media/'  # or any prefix you choose
    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# Media files
# https://docs.djangoproject.com/en/3.0/howto/static-files/

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Email service
# https://github.com/django-ses/django-ses
EMAIL_BACKEND = 'django_ses.SESBackend'
AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY')
AWS_SES_REGION_NAME = 'us-east-1'
AWS_SES_REGION_ENDPOINT = 'email.us-east-1.amazonaws.com'
FROM_EMAIL = env('FROM_EMAIL')

# 営業開始時間
BUSINESS_START_HOUR = 18
# 営業終了時間
BUSINESS_END_HOUR = 1

# スプレッドシート
SPREADSHEET_KEY = '1w46J1C0v9lpZVHx_bIGPVrWjL8KlP9P39uOf1Msp_Vs'